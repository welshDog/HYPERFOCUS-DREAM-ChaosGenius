🧠💥 **SYSTEM OPTIMIZE: PHASE ULTRA ACTIVATED!** 💥🧠
Let’s launch the **full clean-up & restructure squad** to supercharge your HYPERFOCUS DREAM directory into a *flawless digital base of operations*. Buckle in, bro — this is the full-dive Hyperfocus treatment. 🧼⚡

---

## 🔧 HYPERFOCUS ZONE CLEANUP SUITE

### ✅ 1. **🔥 FILE RENAMER BOT**

**Fixes filenames with spaces** → replaces with `_` or `-`
🎯 Targets:

* `"Hyperfocus Zone Command Central (FULL ULTRA MODE)"`
* `"UI UPGRADE PLAN"`
* `"ULL ULTRA MODE SMART DEPLOYMENT SCRIPT (BROski-Driven)"`
* …and more!

```python
import os
from pathlib import Path

def rename_files_with_spaces(root_folder):
    for path in Path(root_folder).rglob("*"):
        if " " in path.name:
            new_name = path.name.replace(" ", "_").replace("(", "").replace(")", "")
            new_path = path.with_name(new_name)
            path.rename(new_path)
            print(f"✅ Renamed: {path} ➜ {new_path}")

# Example usage:
rename_files_with_spaces(r"C:\Users\Lyndz\OneDrive\Desktop\HYPERFOCUS DREAM build idea")
```

---

### ✅ 2. **📦 PROJECT COMPACTOR**

**Moves huge JSON logs & backups to a compressed archive folder**

* Targets: Anything over **10MB** in size

```python
import shutil
import time

def archive_large_files(root_folder, size_limit_mb=10):
    archive_dir = Path(root_folder) / "__archive" / time.strftime("%Y-%m-%d")
    archive_dir.mkdir(parents=True, exist_ok=True)
    
    for path in Path(root_folder).rglob("*.*"):
        if path.is_file() and path.stat().st_size > size_limit_mb * 1024 * 1024:
            shutil.move(str(path), str(archive_dir / path.name))
            print(f"📦 Archived: {path.name}")

# Example usage:
archive_large_files(r"C:\Users\Lyndz\OneDrive\Desktop\HYPERFOCUS DREAM build idea")
```

---

### ✅ 3. **🧼 DUPLICATE SWEEPER**

**Finds repeated filenames across folders and lists them**

```python
from collections import defaultdict

def find_duplicate_filenames(root_folder):
    seen = defaultdict(list)
    for path in Path(root_folder).rglob("*.*"):
        seen[path.name].append(str(path))

    for filename, paths in seen.items():
        if len(paths) > 1:
            print(f"⚠️ Duplicate: {filename}")
            for p in paths:
                print(f"   └── {p}")

# Example usage:
find_duplicate_filenames(r"C:\Users\Lyndz\OneDrive\Desktop\HYPERFOCUS DREAM build idea")
```

---

### ✅ 4. **📂 ULTRA FOLDER ORGANIZER**

**Reorganizes all `.py`, `.json`, `.html`, and `.md` files into clean module structure**

```python
def organize_by_filetype(root_folder):
    types = {
        ".py": "code", ".pyc": "code", ".pyi": "code",
        ".json": "data", ".md": "docs", ".html": "frontend"
    }
    
    for path in Path(root_folder).rglob("*.*"):
        ext = path.suffix.lower()
        if ext in types:
            dest_dir = Path(root_folder) / f"_sorted/{types[ext]}"
            dest_dir.mkdir(parents=True, exist_ok=True)
            shutil.move(str(path), str(dest_dir / path.name))
            print(f"📁 Moved: {path.name} ➜ {dest_dir}")

# Example usage:
organize_by_filetype(r"C:\Users\Lyndz\OneDrive\Desktop\HYPERFOCUS DREAM build idea")
```

---

### ✅ 5. **📋 MASTER INDEX BUILDER**

**Scans project and creates one mega `README.md` with links to all major scripts, dashboards, and doc files**

```python
def generate_readme_index(root_folder):
    readme_path = Path(root_folder) / "README_MASTER.md"
    with open(readme_path, "w", encoding="utf-8") as f:
        f.write("# 📚 Hyperfocus Dream Project Index\n\n")
        for path in Path(root_folder).rglob("*.*"):
            if path.suffix in [".py", ".md", ".html"]:
                rel_path = path.relative_to(root_folder)
                f.write(f"- [{rel_path}](./{rel_path})\n")
    print(f"📋 Created: {readme_path}")

# Example usage:
generate_readme_index(r"C:\Users\Lyndz\OneDrive\Desktop\HYPERFOCUS DREAM build idea")
```

---

## 🧬 Final Step: COMBO SCRIPT RUNNER (optional)

Want me to drop all these into **one mega `.py` file** that runs them in sequence?

Just say:
👉 **“Yes bro, build the combo script and save it to my desktop.”**

Or let me know which ones to run individually 💻
Let’s get your dream system **clean, sorted, and totally ultra.**
