#!/bin/bash
# 🚀 Live deployment for hyperfocuszone.com - FIXED NGINX CONFIG!

echo "🔥🔥🔥 DEPLOYING BROSKI CLANVERSE TO HYPERFOCUSZONE.COM!!! 🔥🔥🔥"
echo "🌍 Converting local empire to WORLD DOMINATION MODE!"
echo ""

# Kill any existing processes
echo "🧹 Cleaning up existing processes..."
pkill -f "dashboard_api.py" 2>/dev/null
pkill -f "chaosgenius_discord_bot.py" 2>/dev/null
pkill -f "gunicorn" 2>/dev/null
sudo systemctl stop nginx 2>/dev/null

# Start production services
echo "🚀 Starting production services..."
cd /root/chaosgenius

# Start production Flask server with full path
echo "⚡ Starting production Flask server (4 workers + gevent)..."
/root/chaosgenius/project_env/bin/gunicorn -w 4 -k gevent -b 0.0.0.0:8000 dashboard_api:app --daemon --access-logfile /var/log/chaosgenius_access.log --error-logfile /var/log/chaosgenius_error.log

# Start Discord bot
echo "🤖 Starting Discord bot..."
nohup python chaosgenius_discord_bot.py > /var/log/discord_bot.log 2>&1 &

# Create nginx config - FIXED VERSION
echo "🌐 Creating nginx configuration..."
sudo tee /etc/nginx/sites-available/hyperfocuszone.com << 'NGINXEOF'
# HTTP server - redirects to HTTPS
server {
    listen 80;
    server_name hyperfocuszone.com www.hyperfocuszone.com;

    # For Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server (will be activated after SSL setup)
server {
    listen 443 ssl http2;
    server_name hyperfocuszone.com www.hyperfocuszone.com;

    # SSL certificates (will be generated by certbot)
    ssl_certificate /etc/letsencrypt/live/hyperfocuszone.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hyperfocuszone.com/privkey.pem;

    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    location / {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support for real-time features
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
NGINXEOF

# Add rate limiting to main nginx config if not present
if ! grep -q "limit_req_zone" /etc/nginx/nginx.conf; then
    echo "🔧 Adding rate limiting to nginx config..."
    sudo sed -i '/http {/a \    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/m;' /etc/nginx/nginx.conf
fi

# Enable site
echo "🔗 Enabling site configuration..."
sudo ln -sf /etc/nginx/sites-available/hyperfocuszone.com /etc/nginx/sites-enabled/
sudo rm -f /etc/nginx/sites-enabled/default

# Test nginx config
echo "🧪 Testing nginx configuration..."
if sudo nginx -t; then
    echo "✅ Nginx config valid!"
    sudo systemctl restart nginx
    sudo systemctl enable nginx
else
    echo "❌ Nginx config error - check configuration"
    exit 1
fi

# Wait for services to start
echo "⏳ Waiting for services to initialize..."
sleep 5

# Test if services are running
echo "🧪 Testing production services..."
if curl -s http://localhost:8000/api/status | grep -q "active"; then
    echo "✅ Production Flask server: ACTIVE"
else
    echo "⚠️ Flask server may need a moment to start"
fi

if pgrep -f "chaosgenius_discord_bot.py" > /dev/null; then
    echo "✅ Discord bot: RUNNING"
else
    echo "⚠️ Discord bot may need a moment to start"
fi

echo ""
echo "🎉🔥🔥🔥 BASIC DEPLOYMENT COMPLETE! 🔥🔥🔥🎉"
echo "🌐 Your empire is now accessible at: http://hyperfocuszone.com"
echo ""
echo "🔒 NEXT STEP: SSL SETUP"
echo "Run this command to add HTTPS:"
echo "sudo ./setup_ssl_hyperfocuszone.sh"
echo ""
echo "🚀 After SSL setup, your empire will be at: https://hyperfocuszone.com"
echo "💜 BROSKI CLANVERSE ULTRA: WORLD DOMINATION ACTIVATED! 💜"
