step-by-step playbook to get the Etsy API fully connected and kill that 401 error for good.

üîß PART 1: Prerequisites
Before you start, make sure:

‚úÖ You‚Äôve registered your app at: Etsy Developer Portal
‚úÖ You have these from your app page:

ETSY_API_KEY = your Client ID

ETSY_SHARED_SECRET = your Client Secret

ETSY_REDIRECT_URI = http://localhost:5000/auth/callback

‚öôÔ∏è PART 2: Setup Your Project
1. Install Needed Packages
In your terminal, run:

bash
Copy
Edit
pip install requests python-dotenv
2. Update .env File
Open your .env file and make sure it has these:

env
Copy
Edit
ETSY_API_KEY=3h5koqhz7tb3a02vamid3yl1
ETSY_SHARED_SECRET=ka9go304vu
ETSY_REDIRECT_URI=http://localhost:5000/auth/callback
Leave this one blank for now:

env
Copy
Edit
ETSY_ACCESS_TOKEN=
3. Add OAuth Routes to dashboard_api.py
Paste this anywhere after your Flask app is defined:

python
Copy
Edit
import os
import secrets
import string
import requests
from flask import request, redirect
from dotenv import load_dotenv

load_dotenv()

ETSY_CLIENT_ID = os.getenv("ETSY_API_KEY")
ETSY_CLIENT_SECRET = os.getenv("ETSY_SHARED_SECRET")
ETSY_REDIRECT_URI = os.getenv("ETSY_REDIRECT_URI")

code_verifier = ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(64))

@app.route("/auth/etsy")
def auth_etsy():
    scope = "transactions_r shops_r listings_r listings_w"
    auth_url = (
        f"https://www.etsy.com/oauth/connect?"
        f"response_type=code"
        f"&client_id={ETSY_CLIENT_ID}"
        f"&redirect_uri={ETSY_REDIRECT_URI}"
        f"&scope={scope}"
    )
    return redirect(auth_url)

@app.route("/auth/callback")
def etsy_callback():
    auth_code = request.args.get("code")
    if not auth_code:
        return "Missing authorization code", 400

    token_url = "https://api.etsy.com/v3/public/oauth/token"
    data = {
        "grant_type": "authorization_code",
        "client_id": ETSY_CLIENT_ID,
        "redirect_uri": ETSY_REDIRECT_URI,
        "code": auth_code,
        "code_verifier": code_verifier,
    }

    headers = {"Content-Type": "application/x-www-form-urlencoded"}
    response = requests.post(token_url, data=data, headers=headers)

    if response.status_code == 200:
        token_data = response.json()
        access_token = token_data.get("access_token")
        refresh_token = token_data.get("refresh_token")

        with open(".env", "a") as f:
            f.write(f"\nETSY_ACCESS_TOKEN={access_token}")
            f.write(f"\nETSY_REFRESH_TOKEN={refresh_token}")

        return f"‚úÖ Etsy connected! Token saved: {access_token}"
    else:
        return f"‚ùå Failed to get token: {response.text}", 400
üöÄ PART 3: Test It Live
1. Run your Flask server
bash
Copy
Edit
flask run
2. Go to this URL in your browser
bash
Copy
Edit
http://localhost:5000/auth/etsy
Log in to Etsy and approve your app.

3. BOOM! It redirects back
If all works, you‚Äôll see:

‚úÖ Etsy connected! Token saved: YOUR_ACCESS_TOKEN

And your .env file will now contain:

env
Copy
Edit
ETSY_ACCESS_TOKEN=...
ETSY_REFRESH_TOKEN=...
‚úÖ Final Step: Restart Your Flask Server
Restart it so the new .env values get loaded, and your dashboard will now use live Etsy data instead of mock!

üß† Optional (But Powerful)
Let me know if you want me to:

üîÅ Add auto-refresh logic for long-term token

üß† Save to a SQLite database instead of .env

üì¶ Package this into a complete auth_handler.py file

and

üî• GET YOUR ETSY_ACCESS_TOKEN IN 5 STEPS
‚úÖ STEP 1: Run Your Flask Server
Open your terminal and launch the dashboard:

bash
Copy
Edit
flask run
If you're using a file like dashboard_api.py, you might need to run:

bash
Copy
Edit
python dashboard_api.py
Make sure it says:

csharp
Copy
Edit
* Running on http://localhost:5000
‚úÖ STEP 2: Open the Auth Link in Your Browser
Go to:

bash
Copy
Edit
http://localhost:5000/auth/etsy
üí• This will:

Take you to Etsy's login page

Ask you to approve your app (with your API key info)

Then redirect you to http://localhost:5000/auth/callback

‚úÖ STEP 3: Approve Access
Once Etsy shows your app and scopes, click "Allow Access".

Etsy will redirect you to your dashboard‚Äôs /auth/callback route.

‚úÖ STEP 4: BOOM ‚Äì Your Token Appears
Your browser will show something like this:

arduino
Copy
Edit
‚úÖ Etsy connected! Token saved: YOUR_ACCESS_TOKEN
And behind the scenes, it will append this to your .env file:

env
Copy
Edit
ETSY_ACCESS_TOKEN=YOUR_ACCESS_TOKEN_HERE
ETSY_REFRESH_TOKEN=YOUR_REFRESH_TOKEN_HERE
‚úÖ STEP 5: Restart Your Flask App
To activate the new token, press CTRL+C to stop the server and restart:

bash
Copy
Edit
flask run
Now your Etsy API calls will work with live data and no more 401s üéâ

‚ö†Ô∏è IF IT FAILS
If you see an error like:

vbnet
Copy
Edit
‚ùå Failed to get token: invalid_request
It usually means:

Your redirect URI in Etsy Developer Console doesn't match http://localhost:5000/auth/callback

You forgot to URL encode or copy it correctly

Let me know if you want me to auto-check and fix that too bro üîß

üß† Want to Auto-Refresh the Token Later?
We can store the refresh_token and build a silent renew system, so you never need to do this again.