[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chaosgenius-engine"
version = "1.0.0"
description = "AI-Powered Neurodivergent Business Creation Ecosystem"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ChaosGenius Team", email = "team@chaosgenius.ai"},
]
keywords = ["ai", "business", "automation", "neurodivergent", "productivity"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "flask>=2.3.3",
    "flask-cors>=4.0.0",
    "requests>=2.31.0",
    "markdown>=3.5.1",
    "python-dotenv>=1.0.0",
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "Pillow>=10.0.0",
    "python-slugify>=8.0.0",
    "schedule>=1.2.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "gunicorn>=21.0.0",
    "waitress>=2.1.0",
    "flasgger>=0.9.7.1",
    "apispec>=6.3.0",
    "python-decouple>=3.8",
    "cryptography>=41.0.0",
    "flask-limiter>=3.5.0",
    "flask-talisman>=1.1.0",
    "psutil>=5.9.0",
    "structlog>=23.1.0",
    "redis>=4.6.0",
    "celery>=5.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-flask>=1.2.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]
ai = [
    "openai>=1.0.0",
    "elevenlabs>=0.2.0",
    "discord.py>=2.3.0",
]

[project.urls]
Homepage = "https://chaosgenius.ai"
Repository = "https://github.com/chaosgenius/engine"
Documentation = "https://docs.chaosgenius.ai"
"Bug Tracker" = "https://github.com/chaosgenius/engine/issues"

[project.scripts]
chaosgenius = "start:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["chaosgenius*", "tools*", "scripts*"]
exclude = ["tests*", "venv*", "venvve*"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "--verbose",
    "--cov=.",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | venvve
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/.venv/*",
    "*/venv/*",
    "*/venvve/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\(.*Protocol.*\\):",
]
show_missing = true
precision = 2
fail_under = 80

[tool.coverage.html]
directory = "htmlcov"